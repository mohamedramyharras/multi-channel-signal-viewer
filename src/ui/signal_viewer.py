# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Task.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pyqtgraph as pg
import numpy as np


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(790, 600)
        MainWindow.setStyleSheet("background-color: black;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Initialize buttons and other UI elements
        self.initButtons()

        # Initialize plots
        self.initPlots()

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 790, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def initButtons(self):
        # Button configurations
        self.Signal1 = self.createButton("Signal", 50, 90)
        self.Play1 = self.createButton("Play", 180, 240)
        self.Stop1 = self.createButton("Stop", 310, 240)
        self.ZoomIn1 = self.createButton("+", 540, 240, size=(31, 31))
        self.ZoomOut1 = self.createButton("-", 600, 240, size=(31, 31))
        self.SS1 = self.createButton("SS", 660, 240, size=(31, 31))

        self.Play1_2 = self.createButton("Play", 180, 510)
        self.Stop2 = self.createButton("Stop", 310, 510)
        self.ZoomIn2 = self.createButton("+", 540, 510, size=(31, 31))
        self.ZoomOut2 = self.createButton("-", 600, 510, size=(31, 31))
        self.SS2 = self.createButton("SS", 660, 510, size=(31, 31))

        self.Signal2 = self.createButton("Signal", 50, 380)

        # Horizontal line
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(0, 270, 941, 31))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")

    def createButton(self, text, x, y, size=(101, 31)):
        button = QtWidgets.QPushButton(self.centralwidget)
        button.setGeometry(QtCore.QRect(x, y, *size))
        button.setStyleSheet(self.getButtonStyle())
        button.setText(text)
        return button

    def getButtonStyle(self):
        return (
            "QPushButton {\n"
            "    background-color: #474747;      /* Dark gray background */\n"
            "    color: #ffffff;                 /* White text */\n"
            "    border: 1px solid #ffffff;      /* White border */\n"
            "    border-radius: 6px;             /* Rounded corners */\n"
            "    font-size: 14px;                /* Font size */\n"
            "    transition: all 0.3s ease;      /* Smooth transition for hover effect */\n"
            "}\n"
            "\n"
            "QPushButton:hover {\n"
            "    background-color: #6C6C6C;      /* Lighter gray for hover */\n"
            "    color: #ffffff;                 /* Keep white text */\n"
            "    border-color: #ffffff;          /* Keep white border */\n"
            "}\n"
            "\n"
            "QPushButton:pressed {\n"
            "    background-color: #1C1C1C;      /* Even darker gray for pressed state */\n"
            "    color: #ffffff;                 /* White text when pressed */\n"
            "}\n"
        )

    def initPlots(self):
        # Create two plots using PyQtGraph
        self.Plot1 = pg.PlotWidget(self.centralwidget)
        self.Plot1.setGeometry(QtCore.QRect(180, 20, 541, 201))
        self.Plot1.setObjectName("Plot1")

        self.Plot2 = pg.PlotWidget(self.centralwidget)
        self.Plot2.setGeometry(QtCore.QRect(180, 300, 541, 201))
        self.Plot2.setObjectName("Plot2")

        # Example data for plotting
        self.plotData()

    def plotData(self):
        # Generate some example data
        x = np.linspace(0, 10, 100)
        y1 = np.sin(x)
        y2 = np.cos(x)

        # Plot the data
        self.Plot1.plot(x, y1, pen='r', name='Sine Wave')  # Red line
        self.Plot2.plot(x, y2, pen='b', name='Cosine Wave')  # Blue line


    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
